Notebook[{

Cell[CellGroupData[{
Cell["Install Dependencies", \
"Section",ExpressionUUID->"2ae65ef9-3fe3-486a-a8df-4d2a64e1c307"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<install_dep.m\>\""}],
      "}"}], "]"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"bcea02a4-5c5f-49d3-8a9d-f6e89cef14dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InstallMongoDBLink", "[", 
  "]"}]], "Input",ExpressionUUID->"2bffaa4b-7efa-4a0d-80bb-aefaa0b549bc"],

Cell[BoxData["\<\"Installed MongoDBLink to \
/Library/Mathematica/Applications\"\>"], \
"Print",ExpressionUUID->"214a7055-d127-4d04-8455-94899725ac69"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run", "Section",ExpressionUUID->"46284bf1-9d77-4194-b662-82cd963fefd9"],

Cell[BoxData["Exit"], \
"Input",ExpressionUUID->"45e8a120-cf45-47b7-8393-3a4e47ff7741"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<evaluation.m\>\""}], 
     "}"}], "]"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"6e3f79c2-9254-4e8c-b361-ddafd058905e"],

Cell[CellGroupData[{

Cell[BoxData["$AccuracyInformation"], \
"Input",ExpressionUUID->"99bc921d-2bf1-42a1-88f6-e600dcbd79f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"BVLC-AlexNet\"\>"}], ",", 
     RowBox[{"\<\"Framework\"\>", "\[Rule]", "\<\"Caffe2\"\>"}], ",", 
     RowBox[{"\<\"MachineArchitecture\"\>", "\[Rule]", "\<\"ppc64le\"\>"}], 
     ",", 
     RowBox[{"\<\"UsingGPU\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BatchSize\"\>", "\[Rule]", "32"}], ",", 
     RowBox[{"\<\"HostName\"\>", "\[Rule]", "\<\"minsky1\"\>"}], ",", 
     RowBox[{"\<\"Top1\"\>", "\[Rule]", "0.55584`"}], ",", 
     RowBox[{"\<\"Top5\"\>", "\[Rule]", "0.79098`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"BVLC-GoogLeNet\"\>"}], ",", 
     RowBox[{"\<\"Framework\"\>", "\[Rule]", "\<\"Caffe2\"\>"}], ",", 
     RowBox[{"\<\"MachineArchitecture\"\>", "\[Rule]", "\<\"ppc64le\"\>"}], 
     ",", 
     RowBox[{"\<\"UsingGPU\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BatchSize\"\>", "\[Rule]", "64"}], ",", 
     RowBox[{"\<\"HostName\"\>", "\[Rule]", "\<\"minsky1\"\>"}], ",", 
     RowBox[{"\<\"Top1\"\>", "\[Rule]", "0.68084`"}], ",", 
     RowBox[{"\<\"Top5\"\>", "\[Rule]", "0.88484`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"BVLC-GoogLeNet\"\>"}], ",", 
     RowBox[{"\<\"Framework\"\>", "\[Rule]", "\<\"Caffe2\"\>"}], ",", 
     RowBox[{"\<\"MachineArchitecture\"\>", "\[Rule]", "\<\"ppc64le\"\>"}], 
     ",", 
     RowBox[{"\<\"UsingGPU\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BatchSize\"\>", "\[Rule]", "32"}], ",", 
     RowBox[{"\<\"HostName\"\>", "\[Rule]", "\<\"minsky1\"\>"}], ",", 
     RowBox[{"\<\"Top1\"\>", "\[Rule]", "0.68084`"}], ",", 
     RowBox[{"\<\"Top5\"\>", "\[Rule]", "0.88484`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"VGG16\"\>"}], ",", 
     RowBox[{"\<\"Framework\"\>", "\[Rule]", "\<\"Caffe2\"\>"}], ",", 
     RowBox[{"\<\"MachineArchitecture\"\>", "\[Rule]", "\<\"ppc64le\"\>"}], 
     ",", 
     RowBox[{"\<\"UsingGPU\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BatchSize\"\>", "\[Rule]", "64"}], ",", 
     RowBox[{"\<\"HostName\"\>", "\[Rule]", "\<\"minsky1\"\>"}], ",", 
     RowBox[{"\<\"Top1\"\>", "\[Rule]", "0.6568`"}], ",", 
     RowBox[{"\<\"Top5\"\>", "\[Rule]", "0.86642`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"VGG16\"\>"}], ",", 
     RowBox[{"\<\"Framework\"\>", "\[Rule]", "\<\"Caffe2\"\>"}], ",", 
     RowBox[{"\<\"MachineArchitecture\"\>", "\[Rule]", "\<\"ppc64le\"\>"}], 
     ",", 
     RowBox[{"\<\"UsingGPU\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BatchSize\"\>", "\[Rule]", "32"}], ",", 
     RowBox[{"\<\"HostName\"\>", "\[Rule]", "\<\"minsky1\"\>"}], ",", 
     RowBox[{"\<\"Top1\"\>", "\[Rule]", "0.6568`"}], ",", 
     RowBox[{"\<\"Top5\"\>", "\[Rule]", "0.86642`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"ResNet50\"\>"}], ",", 
     RowBox[{"\<\"Framework\"\>", "\[Rule]", "\<\"Caffe2\"\>"}], ",", 
     RowBox[{"\<\"MachineArchitecture\"\>", "\[Rule]", "\<\"ppc64le\"\>"}], 
     ",", 
     RowBox[{"\<\"UsingGPU\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BatchSize\"\>", "\[Rule]", "64"}], ",", 
     RowBox[{"\<\"HostName\"\>", "\[Rule]", "\<\"minsky1\"\>"}], ",", 
     RowBox[{"\<\"Top1\"\>", "\[Rule]", "0.00146`"}], ",", 
     RowBox[{"\<\"Top5\"\>", "\[Rule]", "0.00678`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"ResNet50\"\>"}], ",", 
     RowBox[{"\<\"Framework\"\>", "\[Rule]", "\<\"Caffe2\"\>"}], ",", 
     RowBox[{"\<\"MachineArchitecture\"\>", "\[Rule]", "\<\"ppc64le\"\>"}], 
     ",", 
     RowBox[{"\<\"UsingGPU\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"BatchSize\"\>", "\[Rule]", "32"}], ",", 
     RowBox[{"\<\"HostName\"\>", "\[Rule]", "\<\"minsky1\"\>"}], ",", 
     RowBox[{"\<\"Top1\"\>", "\[Rule]", "0.00146`"}], ",", 
     RowBox[{"\<\"Top5\"\>", "\[Rule]", "0.00678`"}]}], 
    "\[RightAssociation]"}]}], 
  "}"}]], "Output",ExpressionUUID->"5e96472b-382e-466f-9ae0-7f536b24fcdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Top1 / Top5 Model Accuracy on AMD64 for MXNet", \
"Subsection",ExpressionUUID->"2b4a2f23-7462-4308-a9dd-0d3282946da3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"models", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"$AccuracyInformation", ",", 
     RowBox[{"Lookup", "[", "\"\<Model\>\"", "]"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"59a9fac6-c127-40a8-9ab4-2722bfb29894"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Catenate", "[", "\[IndentingNewLine]", 
    RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"key", ",", "val"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Legended", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"e", "[", "\"\<BatchSize\>\"", "]"}], ",", 
                RowBox[{"e", "[", "\"\<Top1\>\"", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", "val"}], "}"}]}], "]"}], ",", 
            RowBox[{"key", " ", "<>", "\"\< Top1\>\""}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Legended", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"e", "[", "\"\<BatchSize\>\"", "]"}], ",", 
                RowBox[{"e", "[", "\"\<Top5\>\"", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", "val"}], "}"}]}], "]"}], ",", 
            RowBox[{"key", " ", "<>", "\"\< Top5\>\""}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
      "\[IndentingNewLine]", "models"}], "\[IndentingNewLine]", "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Mesh", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
  "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"3027a4ee-e556-4740-9eb1-f4481decb4f8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[{{64., 0.55584}, {8., 0.55584}, {64., 0.79098}, {8., 
      0.791}, {256., 0.67754}, {64., 0.67754}, {32., 0.67754}, {8., 
      0.67754}, {256., 0.88292}, {64., 0.88292}, {32., 0.88292}, {8., 
      0.88292}, {256., 0.6568}, {64., 0.6568}, {32., 0.6568}, {256., 
      0.86642}, {64., 0.86642}, {32., 0.86642}}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[{1, 2}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$17534, {1}}]& ], 
        TagBox[{
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{3, 4}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$17534, {2}}]& ], 
        TagBox[{
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[{5, 6, 7, 8}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$17534, {3}}]& ], 
        TagBox[{
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[{9, 10, 11, 12}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$17534, {4}}]& ], 
        TagBox[{
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[{13, 14, 15}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$17534, {5}}]& ], 
        TagBox[{
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[{16, 17, 18}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$17534, {6}}]& ]}, {{
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18}]}, {}, {}, {}, {}, {}, {}, {}}}], {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.539486}, 
     PlotRange -> {{0, 256.}, {0.55584, 0.88292}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.539486}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 256.}, {0.55584, 0.88292}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"BVLC-AlexNet Top1\"", "\"BVLC-AlexNet Top5\"", 
       "\"BVLC-GoogLeNet Top1\"", "\"BVLC-GoogLeNet Top5\"", "\"VGG16 Top1\"",
        "\"VGG16 Top5\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], 
     "]"}]& )]], \
"Output",ExpressionUUID->"51373a7a-ef89-448e-a82e-d10436ed4bfd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Top1 / Top5 Model Accuracy on Minsky for Caffe2", \
"Subsection",ExpressionUUID->"64a681d9-b3d0-4d64-ba6d-f6e8000bfa86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"models", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"$AccuracyInformation", ",", 
     RowBox[{"Lookup", "[", "\"\<Model\>\"", "]"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"463bf05f-5e6f-4878-b346-66667ae5deaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Catenate", "[", "\[IndentingNewLine]", 
    RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"key", ",", "val"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Legended", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"e", "[", "\"\<BatchSize\>\"", "]"}], ",", 
                RowBox[{"e", "[", "\"\<Top1\>\"", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", "val"}], "}"}]}], "]"}], ",", 
            RowBox[{"key", " ", "<>", "\"\< Top1\>\""}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Legended", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"e", "[", "\"\<BatchSize\>\"", "]"}], ",", 
                RowBox[{"e", "[", "\"\<Top5\>\"", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", "val"}], "}"}]}], "]"}], ",", 
            RowBox[{"key", " ", "<>", "\"\< Top5\>\""}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
      "\[IndentingNewLine]", "models"}], "\[IndentingNewLine]", "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Mesh", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
  "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"006bfc07-11b7-4a9b-a367-9601e78c9891"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[{{32., 0.55584}, {32., 0.55584}, {32., 0.79098}, {32.,
       0.79098}, {64., 0.68084}, {32., 0.68084}, {64., 0.88484}, {32., 
      0.88484}, {64., 0.6568}, {32., 0.6568}, {64., 0.86642}, {32., 
      0.86642}, {64., 0.00146}, {32., 0.00146}, {64., 0.00678}, {32., 
      0.00678}}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[{1, 2}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$34351, {1}}]& ], 
        TagBox[{
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{3, 4}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$34351, {2}}]& ], 
        TagBox[{
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[{5, 6}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$34351, {3}}]& ], 
        TagBox[{
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[{7, 8}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$34351, {4}}]& ], 
        TagBox[{
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[{9, 10}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$34351, {5}}]& ], 
        TagBox[{
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[{11, 12}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$34351, {6}}]& ], 
        TagBox[{
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[{13, 14}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$34351, {7}}]& ], 
        TagBox[{
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[{15, 16}]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$34351, {8}}]& ]}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
          16}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}], {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {31.5, 0}, 
     PlotRange -> {{32., 64.}, {0, 0.88484}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {31.5, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{32., 64.}, {0, 0.88484}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"BVLC-AlexNet Top1\"", "\"BVLC-AlexNet Top5\"", 
       "\"BVLC-GoogLeNet Top1\"", "\"BVLC-GoogLeNet Top5\"", "\"VGG16 Top1\"",
        "\"VGG16 Top5\"", "\"ResNet50 Top1\"", "\"ResNet50 Top5\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], 
     "]"}]& )]], \
"Output",ExpressionUUID->"4c4a845c-7ecf-4bd8-af74-386d31060814"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Catenate", "[", "\[IndentingNewLine]", 
    RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"key", ",", "val"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"<|", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"e", "[", "\"\<BatchSize\>\"", "]"}], "]"}], " ", "<>",
                " ", "\"\< Top1\>\""}], "->", 
              RowBox[{"Callout", "[", 
               RowBox[{
                RowBox[{"e", "[", "\"\<Top1\>\"", "]"}], ",", 
                RowBox[{"key", " ", "<>", " ", "\"\< Top1\>\""}]}], "]"}]}], 
             "|>"}], ",", 
            RowBox[{"{", 
             RowBox[{"e", ",", "val"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"<|", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"e", "[", "\"\<BatchSize\>\"", "]"}], "]"}], " ", "<>",
                " ", "\"\< Top5\>\""}], "->", 
              RowBox[{"Callout", "[", 
               RowBox[{
                RowBox[{"e", "[", "\"\<Top5\>\"", "]"}], ",", 
                RowBox[{"key", " ", "<>", " ", "\"\< Top5\>\""}]}], "]"}]}], 
             "|>"}], ",", 
            RowBox[{"{", 
             RowBox[{"e", ",", "val"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
      "\[IndentingNewLine]", "models"}], "\[IndentingNewLine]", "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"32", ",", "64"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLegends", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
  "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"bfb86478-a045-42bf-9133-5001db223ff3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{-0.48, 0.}, {49.5, 0.}}]}, {{}, {{{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.982864, 0.7431472, 0.3262672]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{0.5, 0.}, {1.5, 0.55584}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.55584]& , TagBoxNote -> "0.55584"], 
              StyleBox["0.55584`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.55584, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.928, 0.5210666666666667, 0.2]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{2.5, 0.}, {3.5, 0.79098}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.79098]& , TagBoxNote -> "0.79098"], 
              StyleBox["0.79098`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.79098, {}], 
              "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{5.5, 0.}, {6.5, 0.68084}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.68084]& , TagBoxNote -> "0.68084"], 
              StyleBox["0.68084`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.68084, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.982864, 0.7431472, 0.3262672]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6.5, 0.}, {7.5, 0.68084}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.68084]& , TagBoxNote -> "0.68084"], 
              StyleBox["0.68084`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.68084, {}], 
              "Tooltip"]& ]}, {}, {}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.4992, 0.5552, 0.8309304]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{12.5, 0.}, {13.5, 0.88484}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.88484]& , TagBoxNote -> "0.88484"], 
              StyleBox["0.88484`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.88484, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.928, 0.5210666666666667, 0.2]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{14.5, 0.}, {15.5, 0.88484}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.88484]& , TagBoxNote -> "0.88484"], 
              StyleBox["0.88484`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.88484, {}], 
              "Tooltip"]& ]}, {}, {}}}, {}, {}}, {{}, {{}, {{}, {}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{19.5, 0.}, {20.5, 0.6568}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.6568]& , TagBoxNote -> "0.6568"], 
              StyleBox["0.6568`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.6568, {}], "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.982864, 0.7431472, 0.3262672]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{21.5, 0.}, {22.5, 0.6568}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.6568]& , TagBoxNote -> "0.6568"], 
              StyleBox["0.6568`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.6568, {}], 
              "Tooltip"]& ]}, {}, {}, {}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.4992, 0.5552, 0.8309304]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{28.5, 0.}, {29.5, 0.86642}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.86642]& , TagBoxNote -> "0.86642"], 
              StyleBox["0.86642`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.86642, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.928, 0.5210666666666667, 0.2]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{30.5, 0.}, {31.5, 0.86642}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.86642]& , TagBoxNote -> "0.86642"], 
              StyleBox["0.86642`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.86642, {}], 
              "Tooltip"]& ]}, {}, {}}}, {}, {}}, {{}, {{}, {{}, {}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{35.5, 0.}, {36.5, 0.00146}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.00146]& , TagBoxNote -> "0.00146"], 
              StyleBox["0.00146`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00146, {}], "Tooltip"]& ]}, {}}}, {}, {}}, {{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.982864, 0.7431472, 0.3262672]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{37.5, 0.}, {38.5, 0.00146}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.00146]& , TagBoxNote -> "0.00146"], 
              StyleBox["0.00146`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00146, {}], 
              "Tooltip"]& ]}, {}, {}, {}}}, {}, {}}, {{}, {{}, {{}, {}, {}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.4992, 0.5552, 0.8309304]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{44.5, 0.}, {45.5, 0.00678}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.00678]& , TagBoxNote -> "0.00678"], 
              StyleBox["0.00678`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00678, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.308]]], 
             RGBColor[0.928, 0.5210666666666667, 0.2]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{46.5, 0.}, {47.5, 0.00678}, "RoundingRadius" -> 
                  0]}], StatusArea[#, 0.00678]& , TagBoxNote -> "0.00678"], 
              StyleBox["0.00678`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.00678, {}], 
              "Tooltip"]& ]}, {}, {}}}, {}, {}}}, {}, {}}, {}, {}, {{{{{
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {15., 0.9563380698104922}], 
                Offset[{0., 0.}, {15., 0.9563380698104922}], 
                Offset[{0., 0.}, {15., 2.2656207801675525`}], 
                Offset[{0., 0.}, {15., 2.2656207801675525`}], 
                Offset[{0, 0}, {15., 3.574903490524613}], 
                Offset[{0, 5}, {15., 3.574903490524613}], 
                Offset[{0, 10}, {15., 3.574903490524613}], 
                Offset[{0, 10}, {15., 3.574903490524613}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {15., 0.9563380698104922}], 
                Offset[{0., 0.}, {15., 0.9563380698104922}], 
                Offset[{0., 0.}, {15., 2.2656207801675525`}], 
                Offset[{0., 0.}, {15., 2.2656207801675525`}], 
                Offset[{0, 0}, {15., 3.574903490524613}], 
                Offset[{0, 5}, {15., 3.574903490524613}], 
                Offset[{0, 10}, {15., 3.574903490524613}], 
                Offset[{0, 10}, {15., 3.574903490524613}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                Offset[{57., 25.000000000000014`}, {15., 3.574903490524613}], 
                
                Offset[{57., 10.000000000000012`}, {15., 3.574903490524613}], 
                
                Offset[{-57., 9.999999999999988}, {15., 3.574903490524613}], 
                
                Offset[{-57., 24.999999999999986`}, {15., 
                 3.574903490524613}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"BVLC-GoogLeNet Top5\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {15., 3.574903490524613}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {13., 0.9563380698104922}], 
                Offset[{0., 0.}, {13., 0.9563380698104922}], 
                Offset[{0., 0.}, {13., 2.001038631115091}], 
                Offset[{0., 0.}, {13., 2.001038631115091}], 
                Offset[{0, 0}, {13., 3.04573919241969}], 
                Offset[{0, 5}, {13., 3.04573919241969}], 
                Offset[{0, 10}, {13., 3.04573919241969}], 
                Offset[{0, 10}, {13., 3.04573919241969}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {13., 0.9563380698104922}], 
                Offset[{0., 0.}, {13., 0.9563380698104922}], 
                Offset[{0., 0.}, {13., 2.001038631115091}], 
                Offset[{0., 0.}, {13., 2.001038631115091}], 
                Offset[{0, 0}, {13., 3.04573919241969}], 
                Offset[{0, 5}, {13., 3.04573919241969}], 
                Offset[{0, 10}, {13., 3.04573919241969}], 
                Offset[{0, 10}, {13., 3.04573919241969}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                Offset[{57., 25.000000000000014`}, {13., 3.04573919241969}], 
                Offset[{57., 10.000000000000012`}, {13., 3.04573919241969}], 
                Offset[{-57., 9.999999999999988}, {13., 3.04573919241969}], 
                
                Offset[{-57., 24.999999999999986`}, {13., 
                 3.04573919241969}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"BVLC-GoogLeNet Top5\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {13., 3.04573919241969}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {7., 0.7523380698104922}], 
                Offset[{0., 0.}, {7., 0.7523380698104922}], 
                Offset[{0., 0.}, {7., 1.63445648206263}], 
                Offset[{0., 0.}, {7., 1.63445648206263}], 
                Offset[{0, 0}, {7., 2.5165748943147674`}], 
                Offset[{0, 5}, {7., 2.5165748943147674`}], 
                Offset[{0, 10}, {7., 2.5165748943147674`}], 
                Offset[{0, 10}, {7., 2.5165748943147674`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {7., 0.7523380698104922}], 
                Offset[{0., 0.}, {7., 0.7523380698104922}], 
                Offset[{0., 0.}, {7., 1.63445648206263}], 
                Offset[{0., 0.}, {7., 1.63445648206263}], 
                Offset[{0, 0}, {7., 2.5165748943147674`}], 
                Offset[{0, 5}, {7., 2.5165748943147674`}], 
                Offset[{0, 10}, {7., 2.5165748943147674`}], 
                Offset[{0, 10}, {7., 2.5165748943147674`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{56.5, 25.000000000000014`}, {7., 
                 2.5165748943147674`}], 
                
                Offset[{56.5, 10.000000000000012`}, {7., 
                 2.5165748943147674`}], 
                Offset[{-56.5, 9.999999999999988}, {7., 2.5165748943147674`}], 
                
                Offset[{-56.5, 24.999999999999986`}, {7., 
                 2.5165748943147674`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"BVLC-GoogLeNet Top1\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {7., 2.5165748943147674`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {31., 0.9379180698104923}], 
                Offset[{0., 0.}, {31., 0.9379180698104923}], 
                Offset[{0., 0.}, {31., 1.7272464820626299`}], 
                Offset[{0., 0.}, {31., 1.7272464820626299`}], 
                Offset[{0, 0}, {31., 2.5165748943147674`}], 
                Offset[{0, 5}, {31., 2.5165748943147674`}], 
                Offset[{0, 10}, {31., 2.5165748943147674`}], 
                Offset[{0, 10}, {31., 2.5165748943147674`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {31., 0.9379180698104923}], 
                Offset[{0., 0.}, {31., 0.9379180698104923}], 
                Offset[{0., 0.}, {31., 1.7272464820626299`}], 
                Offset[{0., 0.}, {31., 1.7272464820626299`}], 
                Offset[{0, 0}, {31., 2.5165748943147674`}], 
                Offset[{0, 5}, {31., 2.5165748943147674`}], 
                Offset[{0, 10}, {31., 2.5165748943147674`}], 
                Offset[{0, 10}, {31., 2.5165748943147674`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{32., 25.000000000000007`}, {31., 
                 2.5165748943147674`}], 
                
                Offset[{32., 10.000000000000007`}, {31., 
                 2.5165748943147674`}], 
                Offset[{-32., 9.999999999999993}, {31., 2.5165748943147674`}], 
                
                Offset[{-32., 24.999999999999993`}, {31., 
                 2.5165748943147674`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"VGG16 Top5\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {31., 2.5165748943147674`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {47., 0.07827806981049212}], 
                Offset[{0., 0.}, {47., 0.07827806981049212}], 
                Offset[{0., 0.}, {47., 1.2974264820626298`}], 
                Offset[{0., 0.}, {47., 1.2974264820626298`}], 
                Offset[{0, 0}, {47., 2.5165748943147674`}], 
                Offset[{0, 5}, {47., 2.5165748943147674`}], 
                Offset[{0, 10}, {47., 2.5165748943147674`}], 
                Offset[{0, 10}, {47., 2.5165748943147674`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {47., 0.07827806981049212}], 
                Offset[{0., 0.}, {47., 0.07827806981049212}], 
                Offset[{0., 0.}, {47., 1.2974264820626298`}], 
                Offset[{0., 0.}, {47., 1.2974264820626298`}], 
                Offset[{0, 0}, {47., 2.5165748943147674`}], 
                Offset[{0, 5}, {47., 2.5165748943147674`}], 
                Offset[{0, 10}, {47., 2.5165748943147674`}], 
                Offset[{0, 10}, {47., 2.5165748943147674`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{37.5, 25.000000000000007`}, {47., 
                 2.5165748943147674`}], 
                
                Offset[{37.5, 10.000000000000007`}, {47., 
                 2.5165748943147674`}], 
                
                Offset[{-37.5, 9.999999999999993}, {47., 
                 2.5165748943147674`}], 
                
                Offset[{-37.5, 24.999999999999993`}, {47., 
                 2.5165748943147674`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"ResNet50 Top5\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {47., 2.5165748943147674`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {6., 0.7523380698104922}], 
                Offset[{0., 0.}, {6., 0.7523380698104922}], 
                Offset[{0., 0.}, {6., 1.3698743330101686`}], 
                Offset[{0., 0.}, {6., 1.3698743330101686`}], 
                Offset[{0, 0}, {6., 1.9874105962098452`}], 
                Offset[{0, 5}, {6., 1.9874105962098452`}], 
                Offset[{0, 10}, {6., 1.9874105962098452`}], 
                Offset[{0, 10}, {6., 1.9874105962098452`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {6., 0.7523380698104922}], 
                Offset[{0., 0.}, {6., 0.7523380698104922}], 
                Offset[{0., 0.}, {6., 1.3698743330101686`}], 
                Offset[{0., 0.}, {6., 1.3698743330101686`}], 
                Offset[{0, 0}, {6., 1.9874105962098452`}], 
                Offset[{0, 5}, {6., 1.9874105962098452`}], 
                Offset[{0, 10}, {6., 1.9874105962098452`}], 
                Offset[{0, 10}, {6., 1.9874105962098452`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{56.5, 25.000000000000014`}, {6., 
                 1.9874105962098452`}], 
                
                Offset[{56.5, 10.000000000000012`}, {6., 
                 1.9874105962098452`}], 
                Offset[{-56.5, 9.999999999999988}, {6., 1.9874105962098452`}], 
                
                Offset[{-56.5, 24.999999999999986`}, {6., 
                 1.9874105962098452`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"BVLC-GoogLeNet Top1\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {6., 1.9874105962098452`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {29., 0.9379180698104923}], 
                Offset[{0., 0.}, {29., 0.9379180698104923}], 
                Offset[{0., 0.}, {29., 1.4626643330101687`}], 
                Offset[{0., 0.}, {29., 1.4626643330101687`}], 
                Offset[{0, 0}, {29., 1.9874105962098452`}], 
                Offset[{0, 5}, {29., 1.9874105962098452`}], 
                Offset[{0, 10}, {29., 1.9874105962098452`}], 
                Offset[{0, 10}, {29., 1.9874105962098452`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {29., 0.9379180698104923}], 
                Offset[{0., 0.}, {29., 0.9379180698104923}], 
                Offset[{0., 0.}, {29., 1.4626643330101687`}], 
                Offset[{0., 0.}, {29., 1.4626643330101687`}], 
                Offset[{0, 0}, {29., 1.9874105962098452`}], 
                Offset[{0, 5}, {29., 1.9874105962098452`}], 
                Offset[{0, 10}, {29., 1.9874105962098452`}], 
                Offset[{0, 10}, {29., 1.9874105962098452`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{32., 25.000000000000007`}, {29., 
                 1.9874105962098452`}], 
                
                Offset[{32., 10.000000000000007`}, {29., 
                 1.9874105962098452`}], 
                Offset[{-32., 9.999999999999993}, {29., 1.9874105962098452`}], 
                
                Offset[{-32., 24.999999999999993`}, {29., 
                 1.9874105962098452`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"VGG16 Top5\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {29., 1.9874105962098452`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {45., 0.07827806981049235}], 
                Offset[{0., 0.}, {45., 0.07827806981049235}], 
                Offset[{0., 0.}, {45., 1.0328443330101686`}], 
                Offset[{0., 0.}, {45., 1.0328443330101686`}], 
                Offset[{0, 0}, {45., 1.9874105962098452`}], 
                Offset[{0, 5}, {45., 1.9874105962098452`}], 
                Offset[{0, 10}, {45., 1.9874105962098452`}], 
                Offset[{0, 10}, {45., 1.9874105962098452`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {45., 0.07827806981049235}], 
                Offset[{0., 0.}, {45., 0.07827806981049235}], 
                Offset[{0., 0.}, {45., 1.0328443330101686`}], 
                Offset[{0., 0.}, {45., 1.0328443330101686`}], 
                Offset[{0, 0}, {45., 1.9874105962098452`}], 
                Offset[{0, 5}, {45., 1.9874105962098452`}], 
                Offset[{0, 10}, {45., 1.9874105962098452`}], 
                Offset[{0, 10}, {45., 1.9874105962098452`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{37.5, 25.000000000000007`}, {45., 
                 1.9874105962098452`}], 
                
                Offset[{37.5, 10.000000000000007`}, {45., 
                 1.9874105962098452`}], 
                
                Offset[{-37.5, 9.999999999999993}, {45., 
                 1.9874105962098452`}], 
                
                Offset[{-37.5, 24.999999999999993`}, {45., 
                 1.9874105962098452`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"ResNet50 Top5\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {45., 1.9874105962098452`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {3., 0.8624780698104922}], 
                Offset[{0., 0.}, {3., 0.8624780698104922}], 
                Offset[{0., 0.}, {3., 1.1603621839577074`}], 
                Offset[{0., 0.}, {3., 1.1603621839577074`}], 
                Offset[{0, 0}, {3., 1.4582462981049225`}], 
                Offset[{0, 5}, {3., 1.4582462981049225`}], 
                Offset[{0, 10}, {3., 1.4582462981049225`}], 
                Offset[{0, 10}, {3., 1.4582462981049225`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {3., 0.8624780698104922}], 
                Offset[{0., 0.}, {3., 0.8624780698104922}], 
                Offset[{0., 0.}, {3., 1.1603621839577074`}], 
                Offset[{0., 0.}, {3., 1.1603621839577074`}], 
                Offset[{0, 0}, {3., 1.4582462981049225`}], 
                Offset[{0, 5}, {3., 1.4582462981049225`}], 
                Offset[{0, 10}, {3., 1.4582462981049225`}], 
                Offset[{0, 10}, {3., 1.4582462981049225`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                Offset[{49., 25.00000000000001}, {3., 1.4582462981049225`}], 
                Offset[{49., 10.00000000000001}, {3., 1.4582462981049225`}], 
                Offset[{-49., 9.99999999999999}, {3., 1.4582462981049225`}], 
                
                Offset[{-49., 24.99999999999999}, {3., 
                 1.4582462981049225`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"BVLC-AlexNet Top5\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {3., 1.4582462981049225`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {22., 0.7282980698104923}], 
                Offset[{0., 0.}, {22., 0.7282980698104923}], 
                Offset[{0., 0.}, {22., 1.0932721839577073`}], 
                Offset[{0., 0.}, {22., 1.0932721839577073`}], 
                Offset[{0, 0}, {22., 1.4582462981049225`}], 
                Offset[{0, 5}, {22., 1.4582462981049225`}], 
                Offset[{0, 10}, {22., 1.4582462981049225`}], 
                Offset[{0, 10}, {22., 1.4582462981049225`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {22., 0.7282980698104923}], 
                Offset[{0., 0.}, {22., 0.7282980698104923}], 
                Offset[{0., 0.}, {22., 1.0932721839577073`}], 
                Offset[{0., 0.}, {22., 1.0932721839577073`}], 
                Offset[{0, 0}, {22., 1.4582462981049225`}], 
                Offset[{0, 5}, {22., 1.4582462981049225`}], 
                Offset[{0, 10}, {22., 1.4582462981049225`}], 
                Offset[{0, 10}, {22., 1.4582462981049225`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{31.5, 25.000000000000007`}, {22., 
                 1.4582462981049225`}], 
                
                Offset[{31.5, 10.000000000000007`}, {22., 
                 1.4582462981049225`}], 
                
                Offset[{-31.5, 9.999999999999993}, {22., 
                 1.4582462981049225`}], 
                
                Offset[{-31.5, 24.999999999999993`}, {22., 
                 1.4582462981049225`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"VGG16 Top1\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {22., 1.4582462981049225`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {38., 0.07295806981049235}], 
                Offset[{0., 0.}, {38., 0.07295806981049235}], 
                Offset[{0., 0.}, {38., 0.7656021839577074}], 
                Offset[{0., 0.}, {38., 0.7656021839577074}], 
                Offset[{0, 0}, {38., 1.4582462981049225`}], 
                Offset[{0, 5}, {38., 1.4582462981049225`}], 
                Offset[{0, 10}, {38., 1.4582462981049225`}], 
                Offset[{0, 10}, {38., 1.4582462981049225`}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {38., 0.07295806981049235}], 
                Offset[{0., 0.}, {38., 0.07295806981049235}], 
                Offset[{0., 0.}, {38., 0.7656021839577074}], 
                Offset[{0., 0.}, {38., 0.7656021839577074}], 
                Offset[{0, 0}, {38., 1.4582462981049225`}], 
                Offset[{0, 5}, {38., 1.4582462981049225`}], 
                Offset[{0, 10}, {38., 1.4582462981049225`}], 
                Offset[{0, 10}, {38., 1.4582462981049225`}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{37., 25.000000000000007`}, {38., 
                 1.4582462981049225`}], 
                
                Offset[{37., 10.000000000000007`}, {38., 
                 1.4582462981049225`}], 
                Offset[{-37., 9.999999999999993}, {38., 1.4582462981049225`}], 
                
                Offset[{-37., 24.999999999999993`}, {38., 
                 1.4582462981049225`}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"ResNet50 Top1\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {38., 1.4582462981049225`}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {1., 0.6273380698104921}], 
                Offset[{0., 0.}, {1., 0.6273380698104921}], 
                Offset[{0., 0.}, {1., 0.7782100349052461}], 
                Offset[{0., 0.}, {1., 0.7782100349052461}], 
                Offset[{0, 0}, {1., 0.929082}], 
                Offset[{0, 5}, {1., 0.929082}], 
                Offset[{0, 10}, {1., 0.929082}], 
                Offset[{0, 10}, {1., 0.929082}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {1., 0.6273380698104921}], 
                Offset[{0., 0.}, {1., 0.6273380698104921}], 
                Offset[{0., 0.}, {1., 0.7782100349052461}], 
                Offset[{0., 0.}, {1., 0.7782100349052461}], 
                Offset[{0, 0}, {1., 0.929082}], 
                Offset[{0, 5}, {1., 0.929082}], 
                Offset[{0, 10}, {1., 0.929082}], 
                Offset[{0, 10}, {1., 0.929082}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                Offset[{48.5, 25.00000000000001}, {1., 0.929082}], 
                Offset[{48.5, 10.00000000000001}, {1., 0.929082}], 
                Offset[{-48.5, 9.99999999999999}, {1., 0.929082}], 
                Offset[{-48.5, 24.99999999999999}, {1., 0.929082}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"BVLC-AlexNet Top1\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {1., 0.929082}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {20., 0.7282980698104922}], 
                Offset[{0., 0.}, {20., 0.7282980698104922}], 
                Offset[{0., 0.}, {20., 0.8286900349052461}], 
                Offset[{0., 0.}, {20., 0.8286900349052461}], 
                Offset[{0, 0}, {20., 0.929082}], 
                Offset[{0, 5}, {20., 0.929082}], 
                Offset[{0, 10}, {20., 0.929082}], 
                Offset[{0, 10}, {20., 0.929082}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {20., 0.7282980698104922}], 
                Offset[{0., 0.}, {20., 0.7282980698104922}], 
                Offset[{0., 0.}, {20., 0.8286900349052461}], 
                Offset[{0., 0.}, {20., 0.8286900349052461}], 
                Offset[{0, 0}, {20., 0.929082}], 
                Offset[{0, 5}, {20., 0.929082}], 
                Offset[{0, 10}, {20., 0.929082}], 
                Offset[{0, 10}, {20., 0.929082}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                Offset[{31.5, 25.000000000000007`}, {20., 0.929082}], 
                Offset[{31.5, 10.000000000000007`}, {20., 0.929082}], 
                Offset[{-31.5, 9.999999999999993}, {20., 0.929082}], 
                Offset[{-31.5, 24.999999999999993`}, {20., 0.929082}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"VGG16 Top1\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {20., 0.929082}], {0, 0}]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {36., 0.07295806981049224}], 
                Offset[{0., 0.}, {36., 0.07295806981049224}], 
                Offset[{0., 0.}, {36., 0.501020034905246}], 
                Offset[{0., 0.}, {36., 0.501020034905246}], 
                Offset[{0, 0}, {36., 0.929082}], 
                Offset[{0, 5}, {36., 0.929082}], 
                Offset[{0, 10}, {36., 0.929082}], 
                Offset[{0, 10}, {36., 0.929082}]}]}, {
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              BSplineCurveBox[{
                Offset[{0., 0.}, {36., 0.07295806981049224}], 
                Offset[{0., 0.}, {36., 0.07295806981049224}], 
                Offset[{0., 0.}, {36., 0.501020034905246}], 
                Offset[{0., 0.}, {36., 0.501020034905246}], 
                Offset[{0, 0}, {36., 0.929082}], 
                Offset[{0, 5}, {36., 0.929082}], 
                Offset[{0, 10}, {36., 0.929082}], 
                Offset[{0, 10}, {36., 0.929082}]}]}, {
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              EdgeForm[], 
              PolygonBox[{
                Offset[{37., 25.000000000000007`}, {36., 0.929082}], 
                Offset[{37., 10.000000000000007`}, {36., 0.929082}], 
                Offset[{-37., 9.999999999999993}, {36., 0.929082}], 
                Offset[{-37., 24.999999999999993`}, {36., 0.929082}]}]}, {
              EdgeForm[], 
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 
               0.6666666666666666]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"ResNet50 Top1\"", BoxRotation -> 0.], {
                 Opacity[1], 
                 Directive[], 
                 Directive[]}, StripOnInput -> False], TraditionalForm], 
              Offset[{0., 17.5}, {36., 0.929082}], {0, 
              0}]}]}}}}, {{{}}}}, {}, {}}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.48, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["32", TraditionalForm], 0}, {1.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox["32", TraditionalForm], 0}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox["64", TraditionalForm], 0}, {3.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox["32", TraditionalForm], 0}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox["64", TraditionalForm], 0}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox["32", TraditionalForm], 0}, {8., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
          FormBox["64", TraditionalForm], 0}, {9., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
          FormBox["32", TraditionalForm], 0}, {11., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
          FormBox["64", TraditionalForm], 0}, {12., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         13.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
          FormBox["32", TraditionalForm], 0}, {15., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
          FormBox["64", TraditionalForm], 0}, {16., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {17., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         17.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {18., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {18., 
          FormBox["32", TraditionalForm], 0}, {19., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {19., 
          FormBox["64", TraditionalForm], 0}, {20., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {21., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         21.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {22., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {22., 
          FormBox["32", TraditionalForm], 0}, {23., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {23., 
          FormBox["64", TraditionalForm], 0}, {24., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {25., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         25.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {26., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {26., 
          FormBox["32", TraditionalForm], 0}, {27., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {27., 
          FormBox["64", TraditionalForm], 0}, {28., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {29., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         29.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {30., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {30., 
          FormBox["32", TraditionalForm], 0}, {31., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {31., 
          FormBox["64", TraditionalForm], 0}, {32., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {33., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         33.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {34., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {34., 
          FormBox["32", TraditionalForm], 0}, {35., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {35., 
          FormBox["64", TraditionalForm], 0}, {36., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {37., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         37.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {38., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {38., 
          FormBox["32", TraditionalForm], 0}, {39., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {39., 
          FormBox["64", TraditionalForm], 0}, {40., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {41., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         41.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {42., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {42., 
          FormBox["32", TraditionalForm], 0}, {43., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {43., 
          FormBox["64", TraditionalForm], 0}, {44., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {45., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         45.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {46., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {46., 
          FormBox["32", TraditionalForm], 0}, {47., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {47., 
          FormBox["64", TraditionalForm], 0}, {48., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {49., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}, {{
         1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         13.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {17., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         17.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {18., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {19., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {20., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {21., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         21.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {22., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {23., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {24., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {25., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         25.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {26., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {27., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {28., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {29., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         29.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {30., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {31., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {32., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {33., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         33.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {34., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {35., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {36., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {37., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         37.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {38., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {39., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {40., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {41., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         41.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {42., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {43., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {44., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {45., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         45.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {46., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {47., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {48., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {49., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.0970820393249937]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"32 Top1\"", "\"32 Top5\"", "\"64 Top1\"", "\"64 Top5\""},
       "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.308]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.308]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.308]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.308]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.308`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.308`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.308`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.308`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], 
     "]"}]& )]], \
"Output",ExpressionUUID->"e53d7317-28db-484d-8773-69bfe6f7032c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "models", 
  "]"}]], "Input",ExpressionUUID->"4501e143-4dbc-4f0d-aad8-59f8df0ef375"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "BVLC-AlexNet", "BVLC-GoogLeNet", "ResNet50", "VGG16"]], 
          TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Model", "Framework", "MachineArchitecture", "UsingGPU", 
             "BatchSize", "HostName", "Top1", "Top5"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[TypeSystem`Boolean], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 4], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, All, 
             TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, All, "Model"} -> 
           1, {All, All, "Framework"} -> 1, {All, All, "MachineArchitecture"} -> 
           1, {All, All, "UsingGPU"} -> 1, {All, All, "BatchSize"} -> 
           1, {All, All, "HostName"} -> 1, {All, All, "Top1"} -> 
           1, {All, All, "Top5"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[126.], 
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`RowShape[
                Association[
                "Model" -> 
                 TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
                 "Framework" -> 
                 TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                 "MachineArchitecture" -> 
                 TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                 "UsingGPU" -> TypeSystem`PackageScope`AtomShape[36], 
                 "BatchSize" -> TypeSystem`PackageScope`AtomShape[34], 
                 "HostName" -> 
                 TypeSystem`PackageScope`AtomShape[67.20000000000002], "Top1" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Top5" -> 
                 TypeSystem`PackageScope`AtomShape[60]]]], 2, {All}]]], 
           4, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1886961731], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "BVLC-AlexNet", "BVLC-GoogLeNet", "ResNet50", "VGG16"]], 
          TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Model", "Framework", "MachineArchitecture", "UsingGPU", 
             "BatchSize", "HostName", "Top1", "Top5"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[TypeSystem`Boolean], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 4], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1886961731]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, Keys]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Model\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Model\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, "Model"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, "Model"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Framework\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Framework\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, "Framework"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, "Framework"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MachineArchitecture\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MachineArchitecture\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, "MachineArchitecture"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, "MachineArchitecture"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"UsingGPU\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UsingGPU\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, "UsingGPU"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, "UsingGPU"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"BatchSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"BatchSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, "BatchSize"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, "BatchSize"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"HostName\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"HostName\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, "HostName"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, "HostName"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Top1\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Top1\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, "Top1"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, "Top1"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Top5\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Top5\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1407463557][{All, All, "Top5"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[All, All, "Top5"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["BVLC-AlexNet", 
                    Style[
                    "BVLC-AlexNet", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1407463557][{
                    Key["BVLC-AlexNet"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1407463557][
                   GeneralUtilities`Slice[
                    Key["BVLC-AlexNet"]]], "Mouse"], 
                 ImageSize -> {{126., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["BVLC-AlexNet", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-AlexNet"], 1, 
                   Key["Model"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Caffe2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-AlexNet"], 1, 
                   Key["Framework"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ppc64le", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-AlexNet"], 1, 
                   Key["MachineArchitecture"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-AlexNet"], 1, 
                   Key["UsingGPU"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-AlexNet"], 1, 
                   Key["BatchSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["minsky1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-AlexNet"], 1, 
                   Key["HostName"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.55584"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-AlexNet"], 1, 
                   Key["Top1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.79098"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-AlexNet"], 1, 
                   Key["Top5"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["BVLC-GoogLeNet", 
                    Style[
                    "BVLC-GoogLeNet", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1407463557][{
                    Key["BVLC-GoogLeNet"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1407463557][
                   GeneralUtilities`Slice[
                    Key["BVLC-GoogLeNet"]]], "Mouse"], 
                 ImageSize -> {{126., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["BVLC-GoogLeNet", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 1, 
                   Key["Model"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Caffe2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 1, 
                   Key["Framework"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ppc64le", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 1, 
                   Key["MachineArchitecture"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 1, 
                   Key["UsingGPU"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["64"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 1, 
                   Key["BatchSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["minsky1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 1, 
                   Key["HostName"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.68084"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 1, 
                   Key["Top1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.88484"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 1, 
                   Key["Top5"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["BVLC-GoogLeNet", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 2, 
                   Key["Model"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Caffe2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 2, 
                   Key["Framework"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ppc64le", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 2, 
                   Key["MachineArchitecture"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 2, 
                   Key["UsingGPU"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 2, 
                   Key["BatchSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["minsky1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 2, 
                   Key["HostName"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.68084"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 2, 
                   Key["Top1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.88484"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["BVLC-GoogLeNet"], 2, 
                   Key["Top5"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["VGG16", 
                    Style[
                    "VGG16", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1407463557][{
                    Key["VGG16"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1407463557][
                   GeneralUtilities`Slice[
                    Key["VGG16"]]], "Mouse"], 
                 ImageSize -> {{126., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["VGG16", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 1, 
                   Key["Model"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Caffe2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 1, 
                   Key["Framework"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ppc64le", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 1, 
                   Key["MachineArchitecture"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 1, 
                   Key["UsingGPU"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["64"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 1, 
                   Key["BatchSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["minsky1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 1, 
                   Key["HostName"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6568"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 1, 
                   Key["Top1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.86642"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 1, 
                   Key["Top5"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["VGG16", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 2, 
                   Key["Model"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Caffe2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 2, 
                   Key["Framework"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ppc64le", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 2, 
                   Key["MachineArchitecture"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 2, 
                   Key["UsingGPU"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 2, 
                   Key["BatchSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["minsky1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 2, 
                   Key["HostName"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.6568"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 2, 
                   Key["Top1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.86642"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["VGG16"], 2, 
                   Key["Top5"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["ResNet50", 
                    Style[
                    "ResNet50", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1407463557][{
                    Key["ResNet50"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1407463557][
                   GeneralUtilities`Slice[
                    Key["ResNet50"]]], "Mouse"], 
                 ImageSize -> {{126., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ResNet50", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 1, 
                   Key["Model"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Caffe2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 1, 
                   Key["Framework"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ppc64le", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 1, 
                   Key["MachineArchitecture"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 1, 
                   Key["UsingGPU"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["64"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 1, 
                   Key["BatchSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["minsky1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 1, 
                   Key["HostName"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00146"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 1, 
                   Key["Top1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00678"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 1, 
                   Key["Top5"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["ResNet50", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 2, 
                   Key["Model"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Caffe2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 2, 
                   Key["Framework"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ppc64le", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 2, 
                   Key["MachineArchitecture"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 2, 
                   Key["UsingGPU"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 2, 
                   Key["BatchSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["minsky1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 2, 
                   Key["HostName"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00146"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 2, 
                   Key["Top1"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00678"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
                  GeneralUtilities`Slice[
                   Key["ResNet50"], 2, 
                   Key["Top5"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = BoxObject[69377]}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1407463557][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1407463557]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1407463557][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1532., {206.76806640625, 218.23193359375}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->(
   "Dataset[<>]"& )]], \
"Output",ExpressionUUID->"2234e378-7559-4216-bd8e-442b250e2384"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2556, 1418},
WindowMargins->{{Automatic, -135}, {1173, Automatic}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
Magnification:>2. Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 16, \
2017)",
StyleDefinitions->"Default.nb"
]

